{"version":3,"sources":["Images/up.svg","Images/down.svg","Images/up-red.svg","Images/down-red.svg","Images/github2.svg","actions/sorting-actions.ts","Containers/Button.tsx","Components/Header.tsx","Components/MovieItem.tsx","actions/modal-actions.ts","Components/CardsByRating.tsx","Components/CardsByYear.tsx","Containers/MoviesList.tsx","Components/Modal.tsx","Components/App.tsx","actions/fetching-actions.ts","reducers/fetchingResults.ts","reducers/sortingType.ts","reducers/modalStatus.ts","reducers/index.js","index.tsx"],"names":["module","exports","__webpack_require__","p","SortingActions","connect","state","ownProps","active","sort","sortingType","dispatch","onClick","type","_ref","ImgUrl","endsWith","UpImg","DownImg","UpRedImg","DownRedImg","title","react_default","a","createElement","className","src","alt","Header","href","Image","Containers_Button","showModal","id","localName","name","rating","CardsByRating","list","style","marginBottom","map","item","Components_MovieItem","key","localized_name","CardsInYearBlock","_ref2","moviesList","year","filter","b","CardsByYear","years","CardsByYear_CardsInYearBlock","errMessage","fetchingStatus","Fragment","sortType","v","i","indexOf","newlist","Object","objectSpread","yearsByAsc","Components_CardsByYear","yearsByDesc","moviesByRatingByAsc","Components_CardsByRating","moviesByRatingByDesc","console","log","Error","getSortedMovies","Modal","hideModalOnEsc","e","_this","props","hideModal","document","addEventListener","this","removeEventListener","_this$props","_moviesList$filter","movieItem","slicedToArray","description","image_url","stopPropagation","React","Component","modal","App","getMoviesData","src_Components_Header","isModalShown","src_Components_Modal","Containers_MoviesList","isShown","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","then","payload","catch","err","errorData","stop","_x","apply","arguments","initFetchingStatus","isLoading","length","undefined","action","initState","combineReducers","data","films","message","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","Components_App","getElementById"],"mappings":"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","file":"static/js/main.eb49f588.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/up.67dc6f42.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.9b396690.svg\";","module.exports = __webpack_public_path__ + \"static/media/up-red.92da3763.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-red.3d5f02f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/github2.bf81ddad.svg\";","export const SortingActions: SortingActions = {\n  SORT_BY_YEAR_ASC: 'SORT_BY_YEAR_ASC',\n  SORT_BY_YEAR_DESC: 'SORT_BY_YEAR_DESC',\n  SORT_BY_RATING_ASC: 'SORT_BY_RATING_ASC',\n  SORT_BY_RATING_DESC: 'SORT_BY_RATING_DESC'\n}\n\nexport interface SortingActions {\n  SORT_BY_YEAR_ASC: 'SORT_BY_YEAR_ASC',\n  SORT_BY_YEAR_DESC: 'SORT_BY_YEAR_DESC',\n  SORT_BY_RATING_ASC: 'SORT_BY_RATING_ASC',\n  SORT_BY_RATING_DESC: 'SORT_BY_RATING_DESC'\n}\n\nexport type Sort = 'SORT_BY_YEAR_ASC' | 'SORT_BY_YEAR_DESC'\n  | 'SORT_BY_RATING_ASC' | 'SORT_BY_RATING_DESC'\n\nexport interface IActionSetSortingType {\n  type: 'SET_SORT_TYPE'\n  sort: Sort\n}\n\nexport function setSortingType(sort: Sort): IActionSetSortingType {\n  return {\n    type: 'SET_SORT_TYPE',\n    sort\n  }\n}\n","import React from 'react'\nimport { Dispatch } from 'redux'\nimport { connect } from 'react-redux'\nimport { setSortingType, Sort, IActionSetSortingType } from '../actions/sorting-actions'\nimport { AppState } from '../interfaces'\nimport UpImg from '../Images/up.svg'\nimport DownImg from '../Images/down.svg'\nimport UpRedImg from '../Images/up-red.svg'\nimport DownRedImg from '../Images/down-red.svg'\n\ninterface ButtonOwnProps {\n  sort: Sort\n}\n\ninterface ButtonStateProps extends ButtonOwnProps {\n  active: boolean\n}\n\ninterface ButtonDispatchProps {\n  onClick: () => void\n}\n\ntype ButtonProps = ButtonStateProps & ButtonDispatchProps\n\n//Компонент кнопки сортировки\nconst Button = ({ active, sort, onClick }: ButtonProps) => {\n\n  let ImgUrl: string; //здесь назначаем картинку кнопке сортировки\n  if (!active && sort.endsWith('ASC')) {\n    ImgUrl = UpImg\n  } else if (!active && sort.endsWith('DESC')) {\n    ImgUrl = DownImg\n  } else if (active && sort.endsWith('ASC')) {\n    ImgUrl = UpRedImg //если тип выбран, то кнопка красная\n  } else {\n    ImgUrl = DownRedImg //и здесь\n  }\n\n  const title = sort.endsWith('ASC') ? 'по возрастанию' : 'по убыванию'\n\n  return (\n    <div className={\"sort-button\"}\n      onClick={onClick}\n    >\n      <img src={ImgUrl} alt='' title={title} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state: AppState, ownProps: ButtonOwnProps): ButtonStateProps => ({\n  active: ownProps.sort === state.sortingType,\n  sort: ownProps.sort\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch<IActionSetSortingType>, ownProps: ButtonOwnProps): ButtonDispatchProps => ({\n  onClick: () => dispatch(setSortingType(ownProps.sort))\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Button)","import React from 'react'\nimport './Header.scss'\nimport Button from '../Containers/Button'\nimport { SortingActions } from '../actions/sorting-actions'\nimport Image from '../Images/github2.svg'\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <a href=\"https://github.com/srgmkv\" title=\"github.com/srgmkv\">\n        <img src={Image} alt=\"\" />\n      </a>\n      <div className=\"sort\">\n        <div className=\"header-name-cont\">\n          <div className=\"header-name\">Сортировать</div>\n        </div>\n\n        <div className=\"sort-by\">\n\n          <div>по году:</div>\n          <div className=\"buttons\">\n            <Button sort={SortingActions.SORT_BY_YEAR_ASC} />\n            <Button sort={SortingActions.SORT_BY_YEAR_DESC} />\n          </div>\n        </div>\n        <div className=\"sort-by\">\n          <div>по рейтингу:</div>\n          <div className=\"buttons\">\n            <Button sort={SortingActions.SORT_BY_RATING_ASC} />\n            <Button sort={SortingActions.SORT_BY_RATING_DESC} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showModal } from '../actions/modal-actions'\n\ninterface MovieItemProps {\n  localName: string\n  name: string\n  rating: number\n  id: number\n  showModal: typeof showModal\n}\n\n//Компонент рендерит карточку фильма для списка фильмов\nconst MovieItem = ({ localName, name, rating, id, showModal }: MovieItemProps) => {\n\n  return (\n    <div className=\"movie-card\"\n      onClick={() => showModal(id)}\n    >\n      <div className=\"names-block\">\n        <div className=\"local-name\">{localName}</div>\n        <div className=\"name\">{name}</div>\n      </div>\n      <div className=\"rating\">{rating ? <div>{rating}</div> : ''}</div>\n    </div>\n  )\n}\n\nexport default connect(null, { showModal })(MovieItem)\n\n\n","import { Action } from 'redux'\n\nexport type IActionModal = IActionShowModal | IActionHideModal\n\ninterface IActionShowModal extends Action {\n  type: 'SHOW_MODAL'\n  id: number\n}\n\ninterface IActionHideModal extends Action {\n  type: 'HIDE_MODAL'\n}\n\nexport function showModal(id: number): IActionShowModal {\n  return {\n    type: 'SHOW_MODAL',\n    id\n  }\n}\n\nexport function hideModal(): IActionHideModal {\n  return {\n    type: 'HIDE_MODAL'\n  }\n}","import React from 'react'\nimport { IMovieItem } from '../interfaces'\nimport MovieItem from './MovieItem'\n\ninterface CardsByRating {\n  list: IMovieItem[]\n\n}\n\n//Компонент рендерит список фильмов при сортировке по рейтингу\nconst CardsByRating = ({ list }: CardsByRating) => {\n  return (\n    <div className=\"cards\" style={{ marginBottom: '5px' }}>\n      {list && list.map(item =>\n        <MovieItem\n          key={item.id}\n          localName={item.localized_name}\n          name={item.name}\n          rating={item.rating}\n          id={item.id}\n        />)}\n    </div>\n  )\n}\n\nexport default CardsByRating;\n","import React from 'react'\nimport { IMovieItem } from '../interfaces'\nimport MovieItem from './MovieItem'\n\ninterface CardsInYearBlockProps {\n  moviesList: IMovieItem[]\n  year: number\n}\n\ninterface CardsByYearProps {\n  list: IMovieItem[]\n  years: number[]\n}\n\n// Компонент рендерит набор блоков Год, внутри каждого будет список фильмов по этому году.\n// Ему передаем список фильмов из стейта и массив отсортированных годов.\nconst CardsByYear = ({ list, years }: CardsByYearProps) => {\n  return (\n    <div className=\"movie-list\">\n\n      {years.map(year => {\n        return (\n          <div className=\"sorted-by-year\" key={year}>\n            <div className=\"year\">{year}</div>\n            <CardsInYearBlock moviesList={list} year={year} />\n          </div>\n        )\n      })}\n\n    </div>\n  )\n}\n\n//Компонент рендерит список фильмов в блоке Год\nconst CardsInYearBlock = ({ moviesList, year }: CardsInYearBlockProps) => {\n  return (\n    <div className=\"cards\">\n      {moviesList.filter(item => item.year === year)\n        .sort((a, b) => a.rating - b.rating)\n        .map(item =>\n          <MovieItem\n            key={item.id}\n            localName={item.localized_name}\n            name={item.name}\n            rating={item.rating}\n            id={item.id}\n          />)}\n    </div>\n  )\n}\n\nexport default CardsByYear","import React from 'react'\nimport { IMovieItem, AppState } from '../interfaces'\nimport { connect } from 'react-redux'\nimport { Sort, SortingActions } from '../actions/sorting-actions'\nimport CardsByRating from '../Components/CardsByRating'\nimport CardsByYear from '../Components/CardsByYear'\nimport './MoviesList.scss'\n\ninterface MovieListProps {\n  errMessage: string,\n  moviesList: IMovieItem[]\n  sort: Sort\n}\n\n//Компонент подготавливает данные для отображения списка фильма с нужной фильтрацией\nconst MovieList = ({ moviesList, errMessage, sort }: MovieListProps) => {\n\n  //ф-я делает нужный компонент по типу сортировки\n  const getSortedMovies = (list: IMovieItem[], sortType: Sort) => {\n\n    const years = list.map((item: IMovieItem) => item.year)//массив уникальных годов\n      .filter((v, i, a) => a.indexOf(v) === i)\n\n    const newlist = list.map(item => {  // список фильмов, где false рейтинги заменены явно на 0 для точной сортировки\n      return item.rating ? item : { ...item, rating: 0 }\n    })\n\n    switch (sortType) { //проверяем тип сортировки и готовим данные, после чего возвращаем нужный компонент с этими данными\n      case SortingActions.SORT_BY_YEAR_ASC:\n        const yearsByAsc = years.sort((a, b) => a - b)\n        return <CardsByYear list={list} years={yearsByAsc} />\n\n      case SortingActions.SORT_BY_YEAR_DESC:\n        const yearsByDesc = years.sort((a, b) => b - a)\n        return <CardsByYear list={list} years={yearsByDesc} />\n\n      case SortingActions.SORT_BY_RATING_ASC:\n        const moviesByRatingByAsc = newlist.sort((a, b) => a.rating - b.rating)\n        return <CardsByRating list={moviesByRatingByAsc} />\n\n      case SortingActions.SORT_BY_RATING_DESC:\n        const moviesByRatingByDesc = newlist.sort((a, b) => b.rating - a.rating)\n        console.log('moviesByRatingByDesc', moviesByRatingByDesc)\n        return <CardsByRating list={moviesByRatingByDesc} />\n\n      default:\n        throw new Error('Unknown sort: ' + sortType)\n    }\n  }\n\n  return (\n    <>\n      {errMessage && <p className=\"error\">{errMessage}</p>} {/* Выводим ошибки */}\n      {getSortedMovies(moviesList, sort)} {/* Рендерим список с нужной сортировкой */}\n    </>\n  )\n}\n\nconst mapStateToProps = (state: AppState): MovieListProps => ({\n  moviesList: state.moviesList,\n  errMessage: state.fetchingStatus.errMessage,\n  sort: state.sortingType\n})\n\nexport default connect(mapStateToProps)(MovieList)","import React from 'react'\nimport { AppState, IMovieItem } from '../interfaces'\nimport { connect } from 'react-redux'\nimport { hideModal } from '../actions/modal-actions'\nimport './Modal.scss'\n\ninterface ModalDispatchProps {\n  hideModal: typeof hideModal\n}\n\ninterface ModalStateProps {\n  moviesList: IMovieItem[]\n  id: number | null\n}\n\ntype ModalProps = ModalStateProps & ModalDispatchProps\n\n//Модальное окно, вызывается кликом по фильму в списке с информацией о фильме \nclass Modal extends React.Component<ModalProps> {\n  componentDidMount() { //вешаем обработчик нажатия Esc\n    document.addEventListener('keydown', this.hideModalOnEsc);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.hideModalOnEsc);\n  }\n\n  hideModalOnEsc = (e: { key: string }) => {\n    if (e.key === 'Escape') {\n      this.props.hideModal()\n    }\n  }\n\n  render() {\n    const { id, moviesList, hideModal } = this.props\n    const [movieItem] = moviesList.filter(item => item.id === id) //берем нужный фильм  по id из стейта\n    const { description, name, localized_name, year, rating, image_url } = movieItem //данные для рендера карточки фильма\n\n    return (\n      <div className=\"overlay\" onClick={hideModal}>\n        <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n          <div className=\"header\">\n            <div className=\"back\"\n              onClick={hideModal} />\n            <div className=\"local-name\">{localized_name}</div>\n          </div>\n          <div className=\"info\">\n            <div className=\"image\">\n              <span >\n                {image_url && <img src={image_url} alt={name} />}\n              </span>\n            </div>\n            <div className=\"list-info\">\n              <div className=\"name\">{name}</div>\n              <div className=\"year\">Год: <span className=\"year\">{year}</span></div>\n              <div className=\"rating\">Рейтинг: <span className=\"rating\">{rating}</span></div>\n            </div>\n          </div>\n          <div className=\"description\">{description}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: AppState): ModalStateProps => ({\n  moviesList: state.moviesList,\n  id: state.modal.id\n})\n\nexport default connect(mapStateToProps, { hideModal })(Modal)","import React from 'react'\nimport Header from './Header'\nimport { connect } from 'react-redux'\nimport { AppState } from '../interfaces'\nimport { getMoviesData } from '../actions/fetching-actions'\nimport MoviesList from '../Containers/MoviesList'\nimport Modal from './Modal'\n\ninterface AppStateProps {\n   isModalShown: boolean\n}\n\ninterface AppDispatchProps {\n   getMoviesData: () => void\n}\n\ntype AppProps = AppStateProps & AppDispatchProps\n\n//Компонент -точка входа\nclass App extends React.Component<AppProps> {\n   componentDidMount() {\n      this.props.getMoviesData() //запрашиваем данные на сервере\n   }\n\n   render() {\n      return (\n         <div className=\"App\">\n            <Header />\n            {!this.props.isModalShown ? <MoviesList /> : <Modal />} {/* показываем фильмов || модальное окно по флагу из стейта */}\n         </div>\n      )\n   }\n}\n\nconst mapStateToProps = (state: AppState): AppStateProps => ({\n   isModalShown: state.modal.isShown\n})\n\nexport default connect(mapStateToProps, { getMoviesData })(App)","import axios from 'axios'\nimport { AnyAction } from 'redux'\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk'\n\nexport interface IActionDataRequested {\n  type: 'DATA_REQUESTED'\n}\n\nexport interface IActionDataLoaded {\n  type: 'DATA_LOADED'\n  payload: any\n}\n\nexport interface IActionServerErrored {\n  type: 'SERVER_ERRORED'\n  errorData: any\n}\n\nexport type IFetchingActions = IActionDataRequested | IActionServerErrored | IActionDataLoaded;\n\nexport function dataRequested(): IActionDataRequested {\n  return { type: 'DATA_REQUESTED' }\n}\n\nexport function getMoviesData(): ThunkAction<Promise<void>, {}, {}, AnyAction> {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>): Promise<void> => {\n    //dispatch(dataRequested())\n\n    const url = \"https://s3-eu-west-1.amazonaws.com/sequeniatesttask/films.json\"\n    const backupUrl = \"https://raw.githubusercontent.com/srgmkv/movies-to-display/master/public/films-backup.json\"\n\n    //запрашиваем данные с url, если ошибка, то с backupUrl, если ошибка, то обрабатываем ее/записываем,\n    axios(url)\n      .then((payload: any) => dispatch({ type: 'DATA_LOADED', payload }))\n      .catch(() => {\n        axios(backupUrl)\n          .then((payload: any) => dispatch({ type: 'DATA_LOADED', payload }))\n          .catch((err: any) => dispatch({ type: 'SERVER_ERRORED', errorData: err }))\n      })\n  }\n}","import { IFetchingActions } from '../actions/fetching-actions'\nimport { IMovieItem, FetchingStatus } from '../interfaces'\n\nexport const moviesList = (state: IMovieItem[] = [], action: IFetchingActions): IMovieItem[] => {\n  switch (action.type) {\n    case 'DATA_LOADED':\n      return action.payload.data.films\n\n    default:\n      return state\n  }\n}\n\nconst initFetchingStatus: FetchingStatus = {\n  isLoading: false,\n  errMessage: ''\n}\n\nexport const fetchingStatus = (state: FetchingStatus = initFetchingStatus, action: IFetchingActions): FetchingStatus => {\n  switch (action.type) {\n\n    case 'DATA_REQUESTED':\n      return {\n        errMessage: '',\n        isLoading: true\n      }\n    case 'DATA_LOADED':\n      return {\n        errMessage: '',\n        isLoading: false\n      }\n    case 'SERVER_ERRORED':\n      return {\n        isLoading: false,\n        errMessage: action.errorData.message\n      }\n\n    default:\n      return state\n  }\n}","import { SortingActions, IActionSetSortingType, Sort } from '../actions/sorting-actions'\n\nconst sortingType = (state: Sort = SortingActions.SORT_BY_YEAR_ASC, action: IActionSetSortingType): Sort => {\n  switch (action.type) {\n    case 'SET_SORT_TYPE':\n      return action.sort\n    default:\n      return state\n  }\n}\n\nexport default sortingType","import { IActionModal } from '../actions/modal-actions'\n\ninterface ModalState {\n  isShown: boolean,\n  id: number | null\n}\nconst initState = {\n  isShown: false,\n  id: null\n}\nconst modal = (state: ModalState = initState, action: IActionModal): ModalState => {\n  switch (action.type) {\n    case 'SHOW_MODAL':\n      return { isShown: true, id: action.id }\n    case 'HIDE_MODAL':\n      return { isShown: false, id: null}\n    default:\n      return state\n  }\n}\n\nexport default modal","import { combineReducers } from 'redux'\nimport {moviesList, fetchingStatus} from './fetchingResults'\nimport sortingType from './sortingType'\nimport modal from './modalStatus'\n\nexport default combineReducers({\n  moviesList,\n  fetchingStatus,\n  sortingType,\n  modal\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk';\nimport './index.scss'\n\nimport App from './Components/App';\nimport reducer from './reducers/index'\n\nconst store = createStore(\n  reducer, composeWithDevTools(\n    applyMiddleware(thunk)\n))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'))"],"sourceRoot":""}